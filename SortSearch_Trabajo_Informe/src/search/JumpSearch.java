/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package search;

/**
 *
 * @author FREDDY
 */
public class JumpSearch {

    public static long jumpSearch(long[] arr, long x) {
        int n = arr.length;
        // Finding block size to be jumped
        int step = (int) Math.floor(Math.sqrt(n));
        // Finding the block where element is
        // present (if it is present)
        int prev = 0;
        while (arr[Math.min(step, n) - 1] < x) {
            prev = step;
            step += (int) Math.floor(Math.sqrt(n));
            if (prev >= n) {
                return -1;
            }
        }
        // Doing a linear search for x in block
        // beginning with prev.
        while (arr[prev] < x) {
            prev++;
            // If we reached next block or end of
            // array, element is not present.
            if (prev == Math.min(step, n)) {
                return -1;
            }
        }
        // If element is found
        if (arr[prev] == x) {
            return prev;
        }
        return -1;
    }

    // Driver program to test function
    public static void main(String[] args) {

        //long arr[] = { 88089, 99047, 19051, 44279, 55216, 73089, 61272, 14384, 25717, 44310, 62299, 79795, 96965, 20223, 92206, 60806, 38579, 82819, 93536, 80612, 51919, 58729, 80818, 75133, 85539, 96798, 38830, 80179, 74125, 22479, 26375, 96362, 23218, 24873, 90996, 38694, 77146, 21446, 74079, 52215, 12926, 97521, 65076, 37200, 38688, 22485, 88208, 67472, 81119, 92316, 44942, 63215, 22837, 78520, 70777, 15268, 57184, 16845, 85431, 91373, 74956, 25264, 11383, 16071, 54819, 59619, 86930, 15048, 76760, 97046, 26377, 11576, 65829, 11854, 81816, 87445, 31638, 65873, 48053, 73233, 47596, 95459, 24675, 33132, 12727, 20314, 57003, 67651, 18025, 25087, 90711, 53484, 18808, 73304, 73302, 23581, 54268, 84603, 79254, 42027};
        //long arr[] = { 11383, 11576, 11854, 12727, 12926, 14384, 15048, 15268, 16071, 16845, 18025, 18808, 19051, 20223, 20314, 21446, 22479, 22485, 22837, 23218, 23581, 24675, 24873, 25087, 25264, 25717, 26375, 26377, 31638, 33132, 37200, 38579, 38688, 38694, 38830, 42027, 44279, 44310, 44942, 47596, 48053, 51919, 52215, 53484, 54268, 54819, 55216, 57003, 57184, 58729, 59619, 60806, 61272, 62299, 63215, 65076, 65829, 65873, 67472, 67651, 70777, 73089, 73233, 73302, 73304, 74079, 74125, 74956, 75133, 76760, 77146, 78520, 79254, 79795, 80179, 80612, 80818, 81119, 81816, 82819, 84603, 85431, 85539, 86930, 87445, 88089, 88208, 90711, 90996, 91373, 92206, 92316, 93536, 95459, 96362, 96798, 96965, 97046, 97521, 99047};
        //long arr[] =  { 99047, 97521, 97046, 96965, 96798, 96362, 95459, 93536, 92316, 92206, 91373, 90996, 90711, 88208, 88089, 87445, 86930, 85539, 85431, 84603, 82819, 81816, 81119, 80818, 80612, 80179, 79795, 79254, 78520, 77146, 76760, 75133, 74956, 74125, 74079, 73304, 73302, 73233, 73089, 70777, 67651, 67472, 65873, 65829, 65076, 63215, 62299, 61272, 60806, 59619, 58729, 57184, 57003, 55216, 54819, 54268, 53484, 52215, 51919, 48053, 47596, 44942, 44310, 44279, 42027, 38830, 38694, 38688, 38579, 37200, 33132, 31638, 26377, 26375, 25717, 25264, 25087, 24873, 24675, 23581, 23218, 22837, 22485, 22479, 21446, 20314, 20223, 19051, 18808, 18025, 16845, 16071, 15268, 15048, 14384, 12926, 12727, 11854, 11576, 11383};
        long arr[] = { 10500, 12777, 14439, 16230, 17691, 20166, 21517, 21549, 28415, 28599, 29612, 30397, 30571, 31491, 33661, 35608, 36804, 41409, 42094, 44104, 45281, 45569, 46748, 47440, 48706, 50648, 54022, 57350, 61091, 65473, 67224, 67320, 67986, 74478, 77543, 77786, 78257, 78404, 80646, 83416, 84647, 85469, 85640, 92612, 92768, 93914, 94196, 96804, 96990, 97593, 20089, 38139, 41229, 89844, 95093, 47250, 65466, 24133, 99503, 44281, 49386, 37657, 77043, 31342, 31201, 42425, 61678, 94457, 36124, 14068, 13711, 93483, 12017, 76736, 32282, 98718, 73014, 43519, 17662, 30891, 42850, 41584, 74675, 55769, 61378, 95996, 96764, 81939, 64905, 38623, 38754, 80545, 33419, 58920, 35208, 18679, 75479, 41462, 30408, 43963};
        
        long x = 88089;

        // Find the index of 'x' using Jump Search
        long index = jumpSearch(arr, x);

        // Print the index where 'x' is located
        System.out.println("\nNumber " + x
                + " is at index " + index);
    }
}
